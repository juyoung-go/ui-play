# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  pull_request:
    types: [opened, reopend]
  #push:
  #   branches: 
  #   - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  sonarscanner:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: SONAR
    env:
      sonarResult: OK
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_LOGIN_UI_PLAY: ${{ secrets.SONAR_LOGIN_UI_PLAY }}
      sonarJobId: ${{github.run_id}}-${{github.run_number}}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup JDK
      uses: actions/setup-java@v3.6.0
      with: 
        distribution: 'zulu'
        java-version: '11'
        java-package: jre
    
    - name: Download sonar scanner
      run: wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747.zip
      
    - name: Unzip sonar scanner
      run: unzip sonar-scanner-cli-4.7.0.2747.zip
      
    - name: Check Sonar Job Id
      run: echo "$sonarJobId"
      
    - name: Start sonar scanner
      run: sonar-scanner-4.7.0.2747/bin/sonar-scanner -Dsonar.projectKey=ui-play -Dsonar.host.url="$SONAR_HOST_URL" -Dsonar.login="$SONAR_LOGIN_UI_PLAY" -Dsonar.analysis.runNumber="$sonarJobId"
      
    - name: Get sonar result
      run: curl "http://34.64.211.101:5252/sonar/$sonarJobId" >> $sonarResult
      
    - name: Check sonar result
      run: echo "result => $sonarResult"
    
    - name: Add sonar result comment
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: ${{$sonarResult}}
          })
